// ========================================================================== //
// Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --iqm-gate-set-mapping %s | FileCheck %s

func.func @iqm_test() {
  // Test all the gate translations.
  %0 = arith.constant 42.0 : f64
  %1 = quake.alloca : !quake.qref
  %2 = quake.alloca : !quake.qref

  quake.rx |%0:f64| (%1)
  quake.ry |%0:f64| (%1)
  quake.rz |%0:f64| (%1)

  quake.h (%1)
  quake.x (%1)
  quake.y (%1)
  quake.z (%1)
  quake.s (%1)
  quake.t (%1)

  quake.r1 |%0:f64| (%1)
  quake.x [%2:!quake.qref] (%1)
  cc.return
}

// CHECK-LABEL:   func.func @iqm_test() {
// CHECK:           %[[VAL_0:.*]] = arith.constant 4.200000e+01 : f64
// CHECK:           %[[VAL_1:.*]] = quake.alloca : !quake.qref
// CHECK:           %[[VAL_2:.*]] = quake.alloca : !quake.qref
// CHECK:           %[[VAL_3:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           quake.phased_rx |%[[VAL_0]], %[[VAL_3]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_4:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           quake.phased_rx |%[[VAL_0]], %[[VAL_4]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_5:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_6:.*]] = arith.negf %[[VAL_0]] : f64
// CHECK:           %[[VAL_7:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_8:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           %[[VAL_9:.*]] = arith.negf %[[VAL_7]] : f64
// CHECK:           quake.phased_rx |%[[VAL_7]], %[[VAL_8]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_6]], %[[VAL_5]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_9]], %[[VAL_8]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_10:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_11:.*]] = arith.constant 3.1415926535897931 : f64
// CHECK:           %[[VAL_12:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           quake.phased_rx |%[[VAL_10]], %[[VAL_10]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_11]], %[[VAL_12]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_13:.*]] = arith.constant 3.1415926535897931 : f64
// CHECK:           %[[VAL_14:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           quake.phased_rx |%[[VAL_13]], %[[VAL_14]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_15:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_16:.*]] = arith.constant 3.1415926535897931 : f64
// CHECK:           quake.phased_rx |%[[VAL_16]], %[[VAL_15]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_17:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_18:.*]] = arith.constant 3.1415926535897931 : f64
// CHECK:           %[[VAL_19:.*]] = arith.negf %[[VAL_18]] : f64
// CHECK:           %[[VAL_20:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_21:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           %[[VAL_22:.*]] = arith.negf %[[VAL_20]] : f64
// CHECK:           quake.phased_rx |%[[VAL_20]], %[[VAL_21]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_19]], %[[VAL_17]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_22]], %[[VAL_21]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_23:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_24:.*]] = arith.negf %[[VAL_23]] : f64
// CHECK:           %[[VAL_25:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_26:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           %[[VAL_27:.*]] = arith.negf %[[VAL_25]] : f64
// CHECK:           quake.phased_rx |%[[VAL_25]], %[[VAL_26]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_24]], %[[VAL_23]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_27]], %[[VAL_26]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_28:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_29:.*]] = arith.constant 0.78539816339744828 : f64
// CHECK:           %[[VAL_30:.*]] = arith.negf %[[VAL_29]] : f64
// CHECK:           %[[VAL_31:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_32:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           %[[VAL_33:.*]] = arith.negf %[[VAL_31]] : f64
// CHECK:           quake.phased_rx |%[[VAL_31]], %[[VAL_32]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_30]], %[[VAL_28]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_33]], %[[VAL_32]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_34:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_35:.*]] = arith.negf %[[VAL_0]] : f64
// CHECK:           %[[VAL_36:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_37:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           %[[VAL_38:.*]] = arith.negf %[[VAL_36]] : f64
// CHECK:           quake.phased_rx |%[[VAL_36]], %[[VAL_37]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_35]], %[[VAL_34]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_38]], %[[VAL_37]] : f64, f64|(%[[VAL_1]])
// CHECK:           %[[VAL_39:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_40:.*]] = arith.constant 3.1415926535897931 : f64
// CHECK:           %[[VAL_41:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           quake.phased_rx |%[[VAL_39]], %[[VAL_39]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_40]], %[[VAL_41]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.z {{\[}}%[[VAL_2]] : !quake.qref] (%[[VAL_1]])
// CHECK:           %[[VAL_42:.*]] = arith.constant 1.5707963267948966 : f64
// CHECK:           %[[VAL_43:.*]] = arith.constant 3.1415926535897931 : f64
// CHECK:           %[[VAL_44:.*]] = arith.constant 0.000000e+00 : f64
// CHECK:           quake.phased_rx |%[[VAL_42]], %[[VAL_42]] : f64, f64|(%[[VAL_1]])
// CHECK:           quake.phased_rx |%[[VAL_43]], %[[VAL_44]] : f64, f64|(%[[VAL_1]])
// CHECK:           cc.return
// CHECK:         }
