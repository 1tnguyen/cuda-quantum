# ============================================================================ #
# Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

msg=""

# Tell NVQ++ to generate glue code to set the target backend name
GEN_TARGET_BACKEND=true

# Use the RemoteSimulatorQuantumPlatform
PLATFORM_LIBRARY=remote-sim

COMPILER_FLAGS="$COMPILER_FLAGS -DCUDAQ_REMOTE_SIM"

if ${LIBRARY_MODE}; then
	COMPILER_FLAGS="$COMPILER_FLAGS -fembed-bitcode=all"
	LINKER_FLAGS="$LINKER_FLAGS -rdynamic"
	LIBRARY_MODE_EXECUTION_MANAGER=remote-sim
fi

PLATFORM_EXTRA_ARGS=""
# NB: extra arguments always take the form:
#   --<target>-<option> <value>
# as in
#   --remote-sim-backend foo
while [ $# -gt 1 ]; do
	case "$1" in
	--remote-sim-url)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;url;$2"
		;;
	--remote-sim-backend)
		sim_name="$(get_simulation_backend "$2")"
        if [ -z "$sim_name" ]; then
          error_exit "Invalid Target: ($2) - Not a simulator target."  
        fi
        PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;backend;$sim_name"
		;;
	# Auto launch (and shutdown) server processes (providing the number of instances)
	--remote-sim-auto-launch)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;auto_launch;$2"
		;;
	esac
	shift 2
done
